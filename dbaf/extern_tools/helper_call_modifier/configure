clang_path=""
llvm_path=""
show_help="yes"

for opt do
  optarg=`expr "x$opt" : 'x[^=]*=\(.*\)'`
  case "$opt" in
  --help|-h) show_help="yes"
  ;;
  --clang-path=*) clang_path=`readlink -e "$optarg"`; show_help="no"
  ;;
  --llvm-path=*) llvm_path=`readlink -e "$optarg"`; show_help="no"
  ;;
  *) echo "ERROR: unknown option $opt"; show_help="yes"
  ;;
  esac
done

if test x"$show_help" = x"yes" ; then
cat << EOF
Usage: configure [options]
Options: [defaults in brackets after descriptions]

EOF
echo "Standard options:"
echo "  --help                  print this message"
echo "  --clang-path=PATH       path to clang binary file(must be specified)"
echo "  --llvm-path=PATH        path to llvm release or debug path(must be specified)"
echo ""
echo "Advanced options (experts only):"
echo ""
exit 1
fi

if test "$clang_path" != ""; then
  echo clang path: $clang_path
else
  echo
  echo "ERROR: Path to clang path does not exist. Please double check"
  exit
fi
if test "$llvm_path" != ""; then
  echo llvm path: $llvm_path
else
  echo
  echo "ERROR: Path to llvm path does not exist. Please double check"
  exit
fi

if test "$llvm_path" != ""; then
    llvm_config="$llvm_path/bin/llvm-config"
else
    llvm_config="llvm-config"
fi

llvm_components=""
llvm_cxxflags=`$llvm_config $llvm_components --cflags 2> /dev/null`

llvm_ldflags=`$llvm_config $llvm_components --ldflags 2> /dev/null`

llvm_libs=`$llvm_config $llvm_components --libs 2> /dev/null`

#LLVMLIBS="$llvm_libs $LIBS $llvm_ldflags"

if test "$clang_path" != ""; then
  clang="$clang_path/clang"
  clangcxx="$clang_path/clang++"
fi

config_mak="config-tools.mak"
echo "# Automatically generated by configure - do not modify" > $config_mak
echo "LLVM_CXXFLAGS=$llvm_cxxflags" >> $config_mak
echo "LLVMLIBS=$llvm_libs $LIBS $llvm_ldflags" >> $config_mak
echo "CLANG_CC=$clang" >> $config_mak
echo "CLANG_CXX=$clangcxx" >> $config_mak

